#!/usr/bin/env node
'use strict';

const config = require('./lib/config');
const blocks = require('./lib/blocks');


class Bar {
  constructor() {
    this.blocks = [
      new blocks.StaticBlock(`%{F${config.get('cFG')}}`),
      new blocks.StaticBlock(`%{U${config.get('cFG')}}`),
      new blocks.StaticBlock(`%{B${config.get('cBG')}}`),
      new blocks.StaticBlock('%{l} '),
      new blocks.WorkspaceBlock(),
      new blocks.StaticBlock('%{c}'),
      new blocks.CurrentSongBlock(),
      new blocks.StaticBlock('%{r}'),
      new blocks.YumUpdateBlock(),
      new blocks.StaticBlock(' ・ '),
      new blocks.BatteryBlock(),
      new blocks.StaticBlock(' ・ '),
      new blocks.VolumeBlock(),
      new blocks.StaticBlock(' ・ '),
      new blocks.SsidBlock(),
      new blocks.StaticBlock(' ・ '),
      new blocks.DatetimeBlock(),
      new blocks.StaticBlock(' '),
    ];

    this.blocks.forEach((block) => {
      block.on('update', this.output.bind(this));
    });

    this.output();
  }

  output() {
    console.log(this.blocks.map((block) => {
      return block.query();
    }).join(''));
  }
}

// Do configuration from command line options
let argv = require('minimist')(process.argv.slice(2), {
  alias: {
    F: 'cFG',
    U: 'cUL',
    B: 'cBG',
    urgent: 'cUrgent',
  }
});
delete argv._;
config.update(argv);

let bar = new Bar();

// vim: ft=javascript

